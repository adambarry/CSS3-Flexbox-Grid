/*******************************************************************************
Flexbox Grid Styles
*******************************************************************************/

/*
    1:  width: 100%; was initially added to make sure that g__fit'ed .grid
        elements would span the entire width of its parent.

    2:  width: 100%; was removed because it makes y-axis grid_cells exceed their
        grids. SO NO WIDTH: 100% FOR .GRID ELEMENTS!

    3:  Make y-axis grid_cell elements span the available width. Disabled again
        as grid_cell elements shouldn't try to act as grid-elements, and because
        it makes the grid elements overflow parent grids in some test-cases.
        If it needs to be part of the code, it should be hard-linked to
        grid_cell elements, i.e.:

        .grid_cell.grid__y {
            width: 100%;
        }
*/
.grid {
    /*width: 100%; /* 1, 2 */
    max-width: 100%;
    padding: 0;
    margin: 0;
    display: -webkit-box;
    display: -webkit-flex;
    display: -moz-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
    list-style: none;
}

.grid__y {
    /* width: 100%; */ /* 3 */
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
}

/*
    1:  Prevent overflowing content from destroying the layout
*/
.grid_cell,
.grid > .grid {
    overflow: hidden; /* 1 */
    position: relative;
    -webkit-box-flex: 1;
    -webkit-flex: 1;
    -moz-box-flex: 1 ;
    -ms-flex: 1;
    flex: 1;
    display: -webkit-box;
    display: -webkit-flex;
    display: -moz-box;
    display: -ms-flexbox;
    display: flex;
}


/* Grid Cell Spacing (gutters) for individual grid cells
*******************************************************************************/
.g__gutter {
    margin: 8px;
}


/*: Directional
-------------------------------------------------------------------------------*/
.g__gutter_top {
    margin-top: 8px;
}

.g__gutter_right {
    margin-right: 8px;
}

.g__gutter_bottom {
    margin-bottom: 8px;
}

.g__gutter_left {
    margin-left: 8px;
}


/* Grid-Wide Grid Cell Spacing (gutters): General
*******************************************************************************/

/*: X-Axis Grid
-------------------------------------------------------------------------------*/
.grid__gutters:not(.grid__y) > .grid,
.grid__gutters:not(.grid__y) > .grid_cell {
    margin: 8px 4px;
}

.grid__gutters:not(.grid__y) > .grid:first-child,
.grid__gutters:not(.grid__y) > .grid_cell:first-child {
    margin-left: 8px;
}

.grid__gutters:not(.grid__y) > .grid:last-child,
.grid__gutters:not(.grid__y) > .grid_cell:last-child {
    margin-right: 8px;
}


/*: X-Axis Grid (right-to-left text direction)
-------------------------------------------------------------------------------*/
[dir="rtl"] .grid__gutters:not(.grid__y) > .grid:first-child,
[dir="rtl"] .grid__gutters:not(.grid__y) > .grid_cell:first-child {
    margin-right: 8px;
    margin-left: 4px;
}

[dir="rtl"] .grid__gutters:not(.grid__y) > .grid:last-child,
[dir="rtl"] .grid__gutters:not(.grid__y) > .grid_cell:last-child {
    margin-right: 4px;
    margin-left: 8px;
}


/*: Y-Axis Grid
-------------------------------------------------------------------------------*/
.grid__gutters[class*="grid__y"] > .grid,
.grid__gutters[class*="grid__y"] > .grid_cell {
    margin: 4px 8px;
}

.grid__gutters[class*="grid__y"] > .grid:first-child,
.grid__gutters[class*="grid__y"] > .grid_cell:first-child {
    margin-top: 8px;
}

.grid__gutters[class*="grid__y"] > .grid:last-child,
.grid__gutters[class*="grid__y"] > .grid_cell:last-child {
    margin-bottom: 8px;
}


/* Grid-Wide Grid Cell Spacing (gutters): Main-Axis
*******************************************************************************/

/*: X-Axis Grid
-------------------------------------------------------------------------------*/
.grid__gutters_main:not(.grid__y) > .grid_cell {
    margin: 0 4px;
}

.grid__gutters_main:not(.grid__y) > .grid_cell:first-child {
    margin-left: 0;
}

.grid__gutters_main:not(.grid__y) > .grid_cell:last-child {
    margin-right: 0;
}


/*: X-Axis Grid: Nested horizontal grids
-------------------------------------------------------------------------------*/
.grid__gutters_main:not(.grid__y) > .grid:not(.grid__y) > .grid_cell:first-child {
    margin-left: 4px;
}

.grid__gutters_main:not(.grid__y) > .grid:not(.grid__y) > .grid_cell:last-child {
    margin-right: 4px;
}

/*
    When the first child is an x-axis grid
*/
.grid__gutters_main:not(.grid__y) > .grid:not(.grid__y):first-child > .grid_cell:first-child {
    margin-left: 0;
}

/*
    When the last child is an x-axis grid
*/
.grid__gutters_main:not(.grid__y) > .grid:not(.grid__y):last-child > .grid_cell:last-child {
    margin-right: 0;
}


/*: X-Axis Grid: Nested vertical grids
-------------------------------------------------------------------------------*/
.grid__gutters_main:not(.grid__y) > .grid[class*="grid__y"] > .grid_cell {
    margin-right: 4px;
    margin-left: 4px;
}

/*
    When the first child is a y-axis grid
*/
.grid__gutters_main:not(.grid__y) > .grid[class*="grid__y"]:first-child > .grid_cell {
    margin-left: 0;
}

/*
    When the last child is a y-axis grid
*/
.grid__gutters_main:not(.grid__y) > .grid[class*="grid__y"]:last-child > .grid_cell {
    margin-right: 0;
}


/*: Y-Axis Grid
-------------------------------------------------------------------------------*/
.grid__gutters_main[class*="grid__y"] > .grid_cell {
    margin: 4px 0;
}

.grid__gutters_main[class*="grid__y"] > .grid_cell:first-child {
    margin-top: 0;
}

.grid__gutters_main[class*="grid__y"] > .grid_cell:last-child {
    margin-bottom: 0;
}


/*: Y-Axis Grid: Nested vertical grids
-------------------------------------------------------------------------------*/
.grid__gutters_main[class*="grid__y"] > .grid[class*="grid__y"] > .grid_cell:first-child {
    margin-top: 4px;
}

.grid__gutters_main[class*="grid__y"] > .grid[class*="grid__y"] > .grid_cell:last-child {
    margin-bottom: 4px;
}

/*
    When the first child is a y-axis grid
*/
.grid__gutters_main[class*="grid__y"] > .grid[class*="grid__y"]:first-child > .grid_cell:first-child {
        margin-top: 0;
}

/*
    When the last child is an y-axis grid
*/
.grid__gutters_main[class*="grid__y"] > .grid[class*="grid__y"]:last-child > .grid_cell:last-child {
    margin-bottom: 0;
}


/*: X-Axis Grid: Nested horizontal grids
-------------------------------------------------------------------------------*/
.grid__gutters_main[class*="grid__y"] > .grid:not(.grid__y) > .grid_cell {
    margin-top: 4px;
    margin-bottom: 4px;
}

/*
    When the first child is a x-axis grid
*/
.grid__gutters_main[class*="grid__y"] > .grid:not(.grid__y):first-child > .grid_cell {
    margin-top: 0;
}

/*
    When the last child is a x-axis grid
*/
.grid__gutters_main[class*="grid__y"] > .grid:not(.grid__y):last-child > .grid_cell {
    margin-bottom: 0;
}


/* Wrapping
*******************************************************************************/
.g__fit {
    -webkit-box-flex: 0 !important;
    -moz-box-flex: 0 !important;
    -webkit-flex: 0 0 auto !important;
    -ms-flex: 0 0 auto !important;
    flex: 0 0 auto !important;
}

.g__wrap {
    -webkit-box-flex: 0 !important;
    -moz-box-flex: 0 !important;
    -webkit-flex: 0 0 auto !important;
    -ms-flex: 0 0 auto !important;
    flex: 0 0 auto !important;

    /*
        1:  Make sure that the flex container/item wraps its content on the
            cross-axis

        2:  Safari
    */

    -webkit-align-self: flex-start; /* 1, 2 */
    -ms-flex-item-align: start; /* 1 */
    align-self: flex-start; /* 1 */
}


/* Grid Cell Alignment
*******************************************************************************/
/*
    //justify-content: flex-start is the default, so there's no need to have
    //a specific definition for that, besides being able to make the HTML more
    //declarative - so let's keep it (at least for now).
*/

.grid__main_start {
    -webkit-box-pack: start;
    -moz-box-pack: start;
    -webkit-justify-content: flex-start;
    -ms-flex-pack: start;
    justify-content: flex-start;
}

.grid__main_center {
    -webkit-box-pack: center;
    -moz-box-pack: center;
    -webkit-justify-content: center;
    -ms-flex-pack: center;
    justify-content: center;
}

.grid__main_end {
    -webkit-box-pack: end;
    -moz-box-pack: end;
    -webkit-justify-content: flex-end;
    -ms-flex-pack: end;
    justify-content: flex-end;
}


/* General Cross-Axis Alignment
*******************************************************************************/
.grid.g__cross_start {
 -webkit-align-items: flex-start;
 -ms-flex-align: flex-start;
   align-items: flex-start;
}

.grid.g__cross_center {
 -webkit-align-items: center;
 -ms-flex-align: center;
   align-items: center;
}

.grid.g__cross_stretch {
 -webkit-align-items: stretch;
 -ms-flex-align: stretch;
   align-items: stretch;
}

.grid.g__cross_baseline {
 -webkit-align-items: baseline;
 -ms-flex-align: baseline;
   align-items: baseline;
}

.grid.g__cross_end {
 -webkit-align-items: flex-end;
 -ms-flex-align: flex-end;
   align-items: flex-end;
}


/* Individual Cross-Axis Grid Cell Alignment
*******************************************************************************/
.g__cross_start {
    -webkit-align-self: flex-start;
    -ms-flex-item-align: start;
    align-self: flex-start;
}

.g__cross_center {
    -webkit-align-self: center;
    -ms-flex-item-align: center;
    align-self: center;
}

.g__cross_stretch {
    -webkit-align-self: stretch;
    -ms-flex-item-align: stretch;
    align-self: stretch;
}

.g__cross_baseline {
    -webkit-align-self: baseline;
    -ms-flex-item-align: baseline;
    align-self: baseline;
}

.g__cross_end {
    -webkit-align-self: flex-end;
    -ms-flex-item-align: end;
    align-self: flex-end;
}


/* Individual Grid Cell Sizes
*******************************************************************************/
.g__1of2,
.g__2of4 {
    width: 50% !important;
    -webkit-flex: none !important;
    -ms-flex: none !important;
    flex: none !important;
}

.g__1of3 {
    width: 33.333% !important;
    -webkit-flex: none !important;
    -ms-flex: none !important;
    flex: none !important;
}

.g__1of4 {
    width: 25% !important;
    -webkit-flex: none !important;
    -ms-flex: none !important;
    flex: none !important;
}

.g__1of5 {
    width: 20% !important;
    -webkit-flex: none !important;
    -ms-flex: none !important;
    flex: none !important;
}


/* Ordering
*******************************************************************************/
.g__order1 {
    -webkit-box-ordinal-group: 2;
    -moz-box-ordinal-group: 2;
    -webkit-order: 1;
    -ms-flex-order: 1;
    order: 1;
}